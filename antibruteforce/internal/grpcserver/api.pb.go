// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/api.proto

package grpcserver

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// BucketKind kind of bucket
type BucketKind int32

const (
	BucketKind_IP       BucketKind = 0
	BucketKind_PASSWORD BucketKind = 1
	BucketKind_LOGIN    BucketKind = 2
)

var BucketKind_name = map[int32]string{
	0: "IP",
	1: "PASSWORD",
	2: "LOGIN",
}

var BucketKind_value = map[string]int32{
	"IP":       0,
	"PASSWORD": 1,
	"LOGIN":    2,
}

func (x BucketKind) String() string {
	return proto.EnumName(BucketKind_name, int32(x))
}

func (BucketKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{0}
}

// List is type of list may by black or white
type List int32

const (
	List_BLACK List = 0
	List_WHITE List = 1
)

var List_name = map[int32]string{
	0: "BLACK",
	1: "WHITE",
}

var List_value = map[string]int32{
	"BLACK": 0,
	"WHITE": 1,
}

func (x List) String() string {
	return proto.EnumName(List_name, int32(x))
}

func (List) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{1}
}

// Request with ip, login , password
type CheckRequest struct {
	Login                string   `protobuf:"bytes,1,opt,name=Login,proto3" json:"Login,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Ip                   string   `protobuf:"bytes,3,opt,name=Ip,proto3" json:"Ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckRequest) Reset()         { *m = CheckRequest{} }
func (m *CheckRequest) String() string { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()    {}
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{0}
}

func (m *CheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckRequest.Unmarshal(m, b)
}
func (m *CheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckRequest.Marshal(b, m, deterministic)
}
func (m *CheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRequest.Merge(m, src)
}
func (m *CheckRequest) XXX_Size() int {
	return xxx_messageInfo_CheckRequest.Size(m)
}
func (m *CheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRequest proto.InternalMessageInfo

func (m *CheckRequest) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *CheckRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CheckRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

// Response with status and detail message
type StatusResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{1}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

// BucketRequest is bucket for reset field may be ip or login
type ResetBucketRequest struct {
	Kind                 BucketKind `protobuf:"varint,1,opt,name=kind,proto3,enum=grpcserver.BucketKind" json:"kind,omitempty"`
	Key                  string     `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ResetBucketRequest) Reset()         { *m = ResetBucketRequest{} }
func (m *ResetBucketRequest) String() string { return proto.CompactTextString(m) }
func (*ResetBucketRequest) ProtoMessage()    {}
func (*ResetBucketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{2}
}

func (m *ResetBucketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetBucketRequest.Unmarshal(m, b)
}
func (m *ResetBucketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetBucketRequest.Marshal(b, m, deterministic)
}
func (m *ResetBucketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetBucketRequest.Merge(m, src)
}
func (m *ResetBucketRequest) XXX_Size() int {
	return xxx_messageInfo_ResetBucketRequest.Size(m)
}
func (m *ResetBucketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetBucketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetBucketRequest proto.InternalMessageInfo

func (m *ResetBucketRequest) GetKind() BucketKind {
	if m != nil {
		return m.Kind
	}
	return BucketKind_IP
}

func (m *ResetBucketRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// Request is request for delete or add to ip list
type AddIpRequest struct {
	Net                  string   `protobuf:"bytes,1,opt,name=net,proto3" json:"net,omitempty"`
	List                 List     `protobuf:"varint,2,opt,name=list,proto3,enum=grpcserver.List" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddIpRequest) Reset()         { *m = AddIpRequest{} }
func (m *AddIpRequest) String() string { return proto.CompactTextString(m) }
func (*AddIpRequest) ProtoMessage()    {}
func (*AddIpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{3}
}

func (m *AddIpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddIpRequest.Unmarshal(m, b)
}
func (m *AddIpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddIpRequest.Marshal(b, m, deterministic)
}
func (m *AddIpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddIpRequest.Merge(m, src)
}
func (m *AddIpRequest) XXX_Size() int {
	return xxx_messageInfo_AddIpRequest.Size(m)
}
func (m *AddIpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddIpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddIpRequest proto.InternalMessageInfo

func (m *AddIpRequest) GetNet() string {
	if m != nil {
		return m.Net
	}
	return ""
}

func (m *AddIpRequest) GetList() List {
	if m != nil {
		return m.List
	}
	return List_BLACK
}

type DeleteIpRequest struct {
	Net                  string   `protobuf:"bytes,1,opt,name=net,proto3" json:"net,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIpRequest) Reset()         { *m = DeleteIpRequest{} }
func (m *DeleteIpRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIpRequest) ProtoMessage()    {}
func (*DeleteIpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{4}
}

func (m *DeleteIpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIpRequest.Unmarshal(m, b)
}
func (m *DeleteIpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIpRequest.Marshal(b, m, deterministic)
}
func (m *DeleteIpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIpRequest.Merge(m, src)
}
func (m *DeleteIpRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIpRequest.Size(m)
}
func (m *DeleteIpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIpRequest proto.InternalMessageInfo

func (m *DeleteIpRequest) GetNet() string {
	if m != nil {
		return m.Net
	}
	return ""
}

func init() {
	proto.RegisterEnum("grpcserver.BucketKind", BucketKind_name, BucketKind_value)
	proto.RegisterEnum("grpcserver.List", List_name, List_value)
	proto.RegisterType((*CheckRequest)(nil), "grpcserver.CheckRequest")
	proto.RegisterType((*StatusResponse)(nil), "grpcserver.StatusResponse")
	proto.RegisterType((*ResetBucketRequest)(nil), "grpcserver.ResetBucketRequest")
	proto.RegisterType((*AddIpRequest)(nil), "grpcserver.AddIpRequest")
	proto.RegisterType((*DeleteIpRequest)(nil), "grpcserver.DeleteIpRequest")
}

func init() { proto.RegisterFile("api/api.proto", fileDescriptor_1b40cafcd4234784) }

var fileDescriptor_1b40cafcd4234784 = []byte{
	// 398 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xed, 0x8a, 0xd3, 0x40,
	0x14, 0x86, 0xdb, 0xf4, 0x83, 0xee, 0xb1, 0xc6, 0xe1, 0xb0, 0x94, 0x52, 0x45, 0x24, 0xfa, 0x63,
	0x29, 0xd8, 0x42, 0xbd, 0x80, 0xa5, 0xdd, 0x0f, 0x0d, 0x2d, 0x6e, 0x98, 0x0a, 0x0b, 0xfe, 0x8b,
	0xc9, 0x61, 0x1d, 0x52, 0x26, 0xe3, 0xcc, 0x44, 0xf1, 0x86, 0xbc, 0x4e, 0xc9, 0x34, 0x6b, 0x67,
	0x5d, 0xd8, 0xfe, 0x3b, 0x1f, 0x6f, 0xde, 0xbc, 0x79, 0x4e, 0xe0, 0x79, 0xaa, 0xc4, 0x3c, 0x55,
	0x62, 0xa6, 0x74, 0x69, 0x4b, 0x84, 0x3b, 0xad, 0x32, 0x43, 0xfa, 0x27, 0xe9, 0x28, 0x81, 0xe1,
	0xc5, 0x77, 0xca, 0x0a, 0x4e, 0x3f, 0x2a, 0x32, 0x16, 0x4f, 0xa1, 0xb7, 0x29, 0xef, 0x84, 0x1c,
	0xb7, 0xdf, 0xb4, 0xcf, 0x4e, 0xf8, 0xbe, 0xc1, 0x09, 0x0c, 0x92, 0xd4, 0x98, 0x5f, 0xa5, 0xce,
	0xc7, 0x81, 0x5b, 0xfc, 0xeb, 0x31, 0x84, 0x20, 0x56, 0xe3, 0x8e, 0x9b, 0x06, 0xb1, 0x8a, 0xce,
	0x20, 0xdc, 0xda, 0xd4, 0x56, 0x86, 0x93, 0x51, 0xa5, 0x34, 0x84, 0x23, 0xe8, 0xef, 0x27, 0xce,
	0x74, 0xc0, 0x9b, 0x2e, 0xe2, 0x80, 0x9c, 0x0c, 0xd9, 0x55, 0x95, 0x15, 0x64, 0xef, 0x13, 0x4c,
	0xa1, 0x5b, 0x08, 0x99, 0x3b, 0x6d, 0xb8, 0x18, 0xcd, 0x0e, 0x61, 0x67, 0x7b, 0xe1, 0x5a, 0xc8,
	0x9c, 0x3b, 0x0d, 0x32, 0xe8, 0x14, 0xf4, 0xbb, 0x89, 0x54, 0x97, 0xd1, 0x35, 0x0c, 0x97, 0x79,
	0x1e, 0xab, 0x7b, 0x37, 0x06, 0x1d, 0x49, 0xb6, 0xf9, 0x9a, 0xba, 0xc4, 0x77, 0xd0, 0xdd, 0x09,
	0x63, 0xdd, 0x43, 0xe1, 0x82, 0xf9, 0xfe, 0x1b, 0x61, 0x2c, 0x77, 0xdb, 0xe8, 0x2d, 0xbc, 0xb8,
	0xa4, 0x1d, 0x59, 0x7a, 0xc2, 0x6a, 0xfa, 0x1e, 0xe0, 0x10, 0x09, 0xfb, 0x10, 0xc4, 0x09, 0x6b,
	0xe1, 0x10, 0x06, 0xc9, 0x72, 0xbb, 0xbd, 0xbd, 0xe1, 0x97, 0xac, 0x8d, 0x27, 0xd0, 0xdb, 0xdc,
	0x7c, 0x8c, 0x3f, 0xb3, 0x60, 0xfa, 0x0a, 0xba, 0xf5, 0x1b, 0xea, 0xd1, 0x6a, 0xb3, 0xbc, 0x58,
	0xb3, 0x56, 0x5d, 0xde, 0x7e, 0x8a, 0xbf, 0x5c, 0xb1, 0xf6, 0xe2, 0x4f, 0x00, 0xe1, 0x52, 0x5a,
	0xb1, 0xd2, 0x95, 0xa5, 0xeb, 0x52, 0x67, 0x84, 0xe7, 0xd0, 0x73, 0xc7, 0xc1, 0xb1, 0x9f, 0xd2,
	0xbf, 0xd7, 0x64, 0xe2, 0x6f, 0x1e, 0x72, 0x8f, 0x5a, 0xb8, 0x86, 0x67, 0x1e, 0x61, 0x7c, 0xed,
	0x8b, 0x1f, 0xa3, 0x3f, 0x62, 0x76, 0x0e, 0xbd, 0x1a, 0x6d, 0xf2, 0x30, 0x8d, 0x4f, 0xfb, 0x88,
	0xc1, 0x15, 0x0c, 0x1a, 0xa6, 0x09, 0xbe, 0xf4, 0x95, 0xff, 0x91, 0x7e, 0xda, 0x66, 0x35, 0xfa,
	0x7a, 0x3a, 0x17, 0xd2, 0x92, 0x96, 0xe9, 0x6e, 0x7e, 0x10, 0x7e, 0xeb, 0xbb, 0xbf, 0xfb, 0xc3,
	0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xec, 0xd4, 0xf8, 0x83, 0xee, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AntiBruteForceClient is the client API for AntiBruteForce service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AntiBruteForceClient interface {
	Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	ResetBucket(ctx context.Context, in *ResetBucketRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	AddIP(ctx context.Context, in *AddIpRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	DeleteIP(ctx context.Context, in *DeleteIpRequest, opts ...grpc.CallOption) (*StatusResponse, error)
}

type antiBruteForceClient struct {
	cc *grpc.ClientConn
}

func NewAntiBruteForceClient(cc *grpc.ClientConn) AntiBruteForceClient {
	return &antiBruteForceClient{cc}
}

func (c *antiBruteForceClient) Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/grpcserver.AntiBruteForce/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *antiBruteForceClient) ResetBucket(ctx context.Context, in *ResetBucketRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/grpcserver.AntiBruteForce/ResetBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *antiBruteForceClient) AddIP(ctx context.Context, in *AddIpRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/grpcserver.AntiBruteForce/AddIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *antiBruteForceClient) DeleteIP(ctx context.Context, in *DeleteIpRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/grpcserver.AntiBruteForce/DeleteIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AntiBruteForceServer is the server API for AntiBruteForce service.
type AntiBruteForceServer interface {
	Check(context.Context, *CheckRequest) (*StatusResponse, error)
	ResetBucket(context.Context, *ResetBucketRequest) (*StatusResponse, error)
	AddIP(context.Context, *AddIpRequest) (*StatusResponse, error)
	DeleteIP(context.Context, *DeleteIpRequest) (*StatusResponse, error)
}

// UnimplementedAntiBruteForceServer can be embedded to have forward compatible implementations.
type UnimplementedAntiBruteForceServer struct {
}

func (*UnimplementedAntiBruteForceServer) Check(ctx context.Context, req *CheckRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Check not implemented")
}
func (*UnimplementedAntiBruteForceServer) ResetBucket(ctx context.Context, req *ResetBucketRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetBucket not implemented")
}
func (*UnimplementedAntiBruteForceServer) AddIP(ctx context.Context, req *AddIpRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddIP not implemented")
}
func (*UnimplementedAntiBruteForceServer) DeleteIP(ctx context.Context, req *DeleteIpRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteIP not implemented")
}

func RegisterAntiBruteForceServer(s *grpc.Server, srv AntiBruteForceServer) {
	s.RegisterService(&_AntiBruteForce_serviceDesc, srv)
}

func _AntiBruteForce_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AntiBruteForceServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcserver.AntiBruteForce/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AntiBruteForceServer).Check(ctx, req.(*CheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AntiBruteForce_ResetBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AntiBruteForceServer).ResetBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcserver.AntiBruteForce/ResetBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AntiBruteForceServer).ResetBucket(ctx, req.(*ResetBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AntiBruteForce_AddIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddIpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AntiBruteForceServer).AddIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcserver.AntiBruteForce/AddIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AntiBruteForceServer).AddIP(ctx, req.(*AddIpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AntiBruteForce_DeleteIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AntiBruteForceServer).DeleteIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcserver.AntiBruteForce/DeleteIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AntiBruteForceServer).DeleteIP(ctx, req.(*DeleteIpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AntiBruteForce_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcserver.AntiBruteForce",
	HandlerType: (*AntiBruteForceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _AntiBruteForce_Check_Handler,
		},
		{
			MethodName: "ResetBucket",
			Handler:    _AntiBruteForce_ResetBucket_Handler,
		},
		{
			MethodName: "AddIP",
			Handler:    _AntiBruteForce_AddIP_Handler,
		},
		{
			MethodName: "DeleteIP",
			Handler:    _AntiBruteForce_DeleteIP_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}
